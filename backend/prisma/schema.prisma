generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?  // ✅ nowość
  role      Role     @default(HANDLOWIEC) // ✅ zaktualizowana rola
  clients   Client[]
}

enum Role {
  ADMIN
  HANDLOWIEC
}

model Client {
  id             Int       @id @default(autoincrement())
  name           String
  city           String?
  zipCode        String?
  address        String?
  nip       String? @unique
  website        String?
  email          String?
  phone          String?
  interestedFCL  Boolean   @default(false)
  interestedLCL  Boolean   @default(false)
  interestedAIR  Boolean   @default(false)
  interestedFTL  Boolean   @default(false)
  interestedRAIL Boolean   @default(false)
  isImporter     Boolean   @default(false)
  isExporter     Boolean   @default(false)
  fromChina      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userId         Int
  status         String @default("DO AKCEPTACJI")
  user           User      @relation(fields: [userId], references: [id])
  notes         String?
  clientClass   String? @default("D") // A, B, C, D
  daysBetweenTasks Int      @default(1)
  currentGoalId Int?
  tasks            Task[]
  contacts      Contact[]
}

model Contact {
  id           Int     @id @default(autoincrement())
  clientId     Int
  client       Client  @relation(fields: [clientId], references: [id])
  firstName    String
  lastName     String
  position     String?
  salutation   String?  // zwrot grzecznościowy
  email        String?
  phone        String?
}

model Goal {
  id    Int    @id @default(autoincrement())
  label String
  tasks Task[]
}

model Task {
  id        Int      @id @default(autoincrement())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int
  goal      Goal     @relation(fields: [goalId], references: [id])
  goalId    Int
  plannedAt DateTime? // opcjonalnie, w przyszłości
  doneAt    DateTime
  notes     String?
  status    TaskStatus @default(PLANNED)
  createdAt DateTime   @default(now())
}

enum TaskStatus {
  PLANNED
  DONE
}
